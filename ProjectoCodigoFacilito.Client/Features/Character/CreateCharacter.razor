@page "/create-character"
@using Microsoft.AspNetCore.Authorization
@using ProjectoCodigoFacilito.Client.Models.CharacterModel
@using ProjectoCodigoFacilito.Client.Services.Interfaces
@using ProjectoCodigoFacilito.Client.Features.Components
@using Microsoft.AspNetCore.Components.Authorization

@inject ICharacterService characterService

@attribute [Authorize(Roles = "Administrator")]

@* <Header /> *@
<h1>Create Character</h1>

<EditForm Model="@model" OnValidSubmit="@CreateNewCharacter">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <label>
        Name:
        <InputText @bind-Value="@model.Name" class="input-text"/>
    </label>

    <label>
        Game:
        <InputText @bind-Value="@model.Game" class="input-text" />
    </label>

    <label>
        History:
        <InputText @bind-Value="@model.History" class="input-text" />
    </label>

    <label>
        Role:
        <InputText @bind-Value="@model.Role" class="input-text" />
    </label>

    <label>Image:</label>
    <InputFile OnChange="@HandleFileSelected" />
    <button type="submit" class="submit-button">Create Character</button>
</EditForm>


@if (responseMessage != null)
{
    <p>@responseMessage</p>
}

@code {
    private CreateCharacterModel model = new CreateCharacterModel();
    private string responseMessage;
    private IBrowserFile uploadedImage;

    private async Task CreateNewCharacter()
    {
        try
        {
            responseMessage = await characterService.CreateCharacter(model, uploadedImage);
            model = new CreateCharacterModel();
            responseMessage = null;
        }
        catch (Exception ex)
        {
            responseMessage = "Error: " + ex.Message;
        }
    }

    private void HandleFileSelected(InputFileChangeEventArgs e)
    {
        uploadedImage = e.File;
    }
}

<style>
    /* Tu CSS aquí */
    /* Estilo para el formulario */
    form {
        max-width: 400px;
        margin: auto;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f9f9f9;
    }

    /* Estilo para los campos de entrada */
    input[type="text"] {
        width: 100%;
        padding: 10px;
        margin: 5px 0;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    /* Estilo para el botón de enviar */
    button[type="submit"] {
        width: 100%;
        padding: 10px;
        margin: 5px 0;
        border: none;
        border-radius: 4px;
        background-color: #4CAF50;
        color: white;
        cursor: pointer;
    }

    /* Estilo para el mensaje de respuesta */
    .response-message {
        margin-top: 10px;
        color: #4CAF50;
        font-weight: bold;
    }

    label {
        display: block;
        margin-bottom: 10px;
    }

    .input-text {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    h1{
        text-align: center;
    }

</style>
